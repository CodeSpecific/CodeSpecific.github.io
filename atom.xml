<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vitamin Blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://codespecific.github.io/"/>
  <updated>2019-03-23T07:52:19.115Z</updated>
  <id>http://codespecific.github.io/</id>
  
  <author>
    <name>Vitamin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>随机获取指定范围内N个不重复数字</title>
    <link href="http://codespecific.github.io/2019/03/23/%E9%9A%8F%E6%9C%BA%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E8%8C%83%E5%9B%B4%E5%86%85N%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E6%95%B0%E5%AD%97/"/>
    <id>http://codespecific.github.io/2019/03/23/随机获取指定范围内N个不重复数字/</id>
    <published>2019-03-23T07:47:00.000Z</published>
    <updated>2019-03-23T07:52:19.115Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt; </span><br><span class="line">///  随机获取指定范围内N个不重复数字 </span><br><span class="line">/// &lt;/summary&gt; </span><br><span class="line">/// &lt;param name=&quot;min&quot;&gt;指定范围最小值&lt;/param&gt; </span><br><span class="line">/// &lt;param name=&quot;max&quot;&gt;指定范围最大值&lt;/param&gt; </span><br><span class="line">/// &lt;param name=&quot;num&quot;&gt;不重复数字的个数&lt;/param&gt; </span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt; </span><br><span class="line">private int[] NonRepeatingRandomNumbers(int min, int max, int num) </span><br><span class="line">&#123;</span><br><span class="line">    int len = max - min + 1;</span><br><span class="line">    if (min &gt; max || len &lt; 0 || num &lt; 0 || num &gt; len)</span><br><span class="line">    &#123;</span><br><span class="line">        throw new Exception(&quot;输入参数错误&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    int[] numbers = new int[len];</span><br><span class="line">    for (int i = min; i &lt;= max; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        numbers[i - min] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    int[] result = new int[num];</span><br><span class="line">    for (int i = 0; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Random random = new Random();</span><br><span class="line">        int index = random.Next(0, --len);</span><br><span class="line">        result[i] = numbers[index];</span><br><span class="line">        numbers[index] = numbers[len];</span><br><span class="line">    &#125;</span><br><span class="line">    return result; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码解读"><a href="#代码解读" class="headerlink" title="代码解读"></a>代码解读</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 数据源(numbers):存储用户输入最小值(包含)和最大值(包含)之间的连续自然数</span><br><span class="line">2. 目标数组(result):存储最终需要返回的不重复数字</span><br><span class="line">3. 数据源数组长度(len):通过计算得出数据源的数组长度，以便初始化数组，存储数据源</span><br><span class="line">4. 核心循环:</span><br><span class="line">    4.1 从[0，len-1]范围内随机获取下标，并取值放到目标数组内，同时将获取到的元素替换为len-1位置的元素;</span><br><span class="line">    4.2 然后从[0,len-2]范围内随机获取下标，并取值放置到目标数组中,同时将获取到的元素替换为len-2位置的元素;</span><br><span class="line">    4.3 以此类推直到满足目标数组元素的个数为止;</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">算法的时间复杂度为O(N)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="算法" scheme="http://codespecific.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="随机数" scheme="http://codespecific.github.io/tags/%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Mysql数据库使用Insert语句插入中文数据报错</title>
    <link href="http://codespecific.github.io/2019/03/23/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8Insert%E8%AF%AD%E5%8F%A5%E6%8F%92%E5%85%A5%E4%B8%AD%E6%96%87%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99/"/>
    <id>http://codespecific.github.io/2019/03/23/Mysql数据库使用Insert语句插入中文数据报错/</id>
    <published>2019-03-23T02:50:58.000Z</published>
    <updated>2019-03-23T07:49:00.004Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>在mysql的命令行模式中，通过insert语句插入中文数据的时候报错，类似于下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Incorrect string value: &apos;\xE7\x8F&apos; for column &apos;name&apos; at row 1</span><br></pre></td></tr></table></figure></p><p>造成这个错误通常是由于创建数据表的时候使用了不正确的编码格式,可以使用如下命令查看操作的目标数据表的编码格式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE TABLE 表名；</span><br></pre></td></tr></table></figure></p><p>通过结果就可以看到目标表的目标字段对应的编码格式，我们只需要把该列的编码格式转化为<code>utf8</code>即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 MODIFY 列名 数据类型 CHARACTER SET utf8 非空约束</span><br><span class="line"></span><br><span class="line">例如：ALTER TABLE student MODIFY name VARCHAR(20) CHARACTER SET utf8 NOT NULL</span><br></pre></td></tr></table></figure></p><p>当然这只是一个临时的解决办法，更近一步的解决办法是修改数据表的编码，防止以后在使用命令添加数据列的时候，使用的仍是数据表的编码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 DEFAULT CHARSET utf8;</span><br></pre></td></tr></table></figure></p><p>然后这还不是最终的解决办法，我们还可以通过修改数据库的编码方式来影响新创建的数据表的编码方式,进而影响数据列的编码方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE 数据库名 DEFAULT CHARACTER SET utf8;</span><br></pre></td></tr></table></figure></p><p>但是这需要我们每次在创建数据库的时候都必须指定编码方式，要想一劳永逸，我们可以直接去修改mysql的配置文件，使用如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql/mysql.cnf.d/mysqld.cnf</span><br></pre></td></tr></table></figure></p><p>添加如下配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br></pre></td></tr></table></figure></p><p>保存之后重新启动mysql服务即可,命令如下(以Ubuntu16.04为例)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysql.service</span><br></pre></td></tr></table></figure></p><p>注意在设置编码格式的时候，使用如下命令查看支持的编码格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &apos;char%&apos;;</span><br></pre></td></tr></table></figure></p><p><img src="https://github.com/CodeSpecific/GraphBed/raw/master/2019/03/23/2887109953-5c1e211113c7c_articlex.png" alt="图片描述"></p>]]></content>
    
    <summary type="html">
    
      Mysql数据库使用Insert语句插入中文数据报错
    
    </summary>
    
      <category term="Mysql" scheme="http://codespecific.github.io/categories/Mysql/"/>
    
    
      <category term="Error" scheme="http://codespecific.github.io/tags/Error/"/>
    
  </entry>
  
</feed>
